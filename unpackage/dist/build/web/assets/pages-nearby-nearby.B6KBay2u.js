import{g as t,a as e,c as a,v as o,r as n,b as s,h as i,m as c,e as l,w as r,i as d,o as u,f as h,j as p,t as g,x as m,G as y,H as L,n as k,k as f,l as I}from"./index-BgeTyoVd.js";import{_ as M}from"./_plugin-vue_export-helper.BCo6x5W8.js";const w="9jnxn6bIxVgX1u4KffC5Cc83dTMzzYIA";const b=M({data:()=>({currentCity:"定位中...",mapInstance:null,mapStatus:"初始化中",mapError:!1,mapErrorMessage:"",mapReady:!1,locationStatus:"准备定位",currentLocation:null,watchId:null,nearbyLockers:[],selectedLocker:null,loadingText:"正在初始化..."}),onLoad(){console.log("=== 实时定位地图页面加载 ==="),console.log("百度地图API密钥:",w)},onReady(){console.log("=== 页面渲染完成，开始初始化 ==="),this.startInitialization()},onUnload(){console.log("📱 页面卸载，清理资源"),this.watchId&&(clearInterval(this.watchId),console.log("✅ 位置监听定时器已清理"))},onHide(){console.log("📱 页面隐藏")},onShow(){console.log("📱 页面显示");const o=t("selectedCity");if(o)o.name!==this.currentCity?(console.log("🏙️ 检测到城市变化:",this.currentCity,"->",o.name),this.currentCity=o.name,e({title:`已切换到${o.name}`,icon:"success",duration:2e3}),this.mapInstance?this.setCityLocation(o):this.startInitialization()):console.log("🏙️ 城市未变化，保持当前状态:",this.currentCity);else{console.log("⚠️ 未找到选择的城市，使用默认城市");const t={name:"郑州",coordinates:{longitude:113.6253,latitude:34.7466}};a("selectedCity",t),this.currentCity=t.name,this.mapInstance?this.setCityLocation(t):this.startInitialization()}},methods:{selectCity(){console.log("选择城市"),o({url:"/pages/city-select/city-select?from=nearby"})},startInitialization(){console.log("🚀 开始初始化"),this.loadingText="正在初始化地图...",this.mapStatus="初始化中";const e=t("selectedCity");e&&e.coordinates?(console.log("📍 使用选择的城市:",e.name),this.currentCity=e.name,this.initMapWithCity(e)):(console.log("📍 未找到选择的城市，使用默认城市"),this.currentCity="郑州",this.initMapWithDefaultCity())},async initMapWithCity(t){console.log("🗺️ 基于选择城市初始化地图:",t.name),this.mapStatus="加载地图API",this.loadingText="正在加载百度地图API...";try{await this.loadBaiduMapAPI(),this.createMapInstance(),setTimeout((()=>{this.setCityLocation(t)}),1e3)}catch(e){console.error("地图初始化失败:",e),this.handleError("地图初始化失败: "+e.message)}},async initMapWithDefaultCity(){console.log("🗺️ 使用默认城市初始化地图");const t={name:"郑州",coordinates:{longitude:113.6253,latitude:34.7466}};a("selectedCity",t),await this.initMapWithCity(t)},setCityLocation(t){console.log("📍 设置城市位置:",t.name);const{longitude:a,latitude:o}=t.coordinates;if(this.locationStatus=`当前城市: ${t.name}`,this.currentLocation={longitude:a.toFixed(6),latitude:o.toFixed(6),accuracy:1e3,timestamp:(new Date).toLocaleTimeString(),address:`${t.name}市中心`,source:"城市选择"},this.mapInstance){const e=new BMap.Point(a,o);this.mapInstance.centerAndZoom(e,13),this.addCityLocationMarker(e,t.name)}this.loadNearbyLockers(a,o),e({title:`已定位到${t.name}`,icon:"success",duration:2e3}),console.log("✅ 城市位置设置完成")},addCityLocationMarker(t,e){if(!this.mapInstance)return;this.mapInstance.clearOverlays();const a=new BMap.Marker(t),o=new BMap.Icon("data:image/svg+xml;base64,"+btoa('\n\t\t\t\t\t\t<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32">\n\t\t\t\t\t\t\t<circle cx="16" cy="16" r="12" fill="#FF6B35" stroke="#FFFFFF" stroke-width="4"/>\n\t\t\t\t\t\t\t<circle cx="16" cy="16" r="4" fill="#FFFFFF"/>\n\t\t\t\t\t\t\t<circle cx="16" cy="16" r="14" fill="none" stroke="#FF6B35" stroke-width="2" opacity="0.3"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t'),new BMap.Size(32,32),{anchor:new BMap.Size(16,16)});a.setIcon(o),this.mapInstance.addOverlay(a);const n=`\n\t\t\t\t\t<div style="padding: 15px; min-width: 250px;">\n\t\t\t\t\t\t<h4 style="margin: 0 0 10px 0; color: #FF6B35;">🏙️ ${e}</h4>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>经度:</strong> ${t.lng.toFixed(6)}</p>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>纬度:</strong> ${t.lat.toFixed(6)}</p>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>定位方式:</strong> 城市选择</p>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>更新时间:</strong> ${(new Date).toLocaleTimeString()}</p>\n\t\t\t\t\t\t<p style="margin: 5px 0; word-break: break-all;"><strong>地址:</strong> ${e}市中心区域</p>\n\t\t\t\t\t</div>\n\t\t\t\t`,s=new BMap.InfoWindow(n);a.addEventListener("click",(()=>{this.mapInstance.openInfoWindow(s,t)})),console.log("📍 城市位置标记已添加")},startBaiduGeolocation(){if(console.log("📍 开始百度地图定位"),this.loadingText="正在使用百度定位获取您的位置...",this.mapStatus="百度定位中",this.locationStatus="正在定位",!this.mapInstance)return console.error("❌ 地图实例未创建"),void this.fallbackToHTML5Location();try{const t=new BMap.GeolocationControl({anchor:BMAP_ANCHOR_BOTTOM_RIGHT,offset:new BMap.Size(10,10),enableAutoLocation:!1,locationIcon:null});this.mapInstance.addControl(t);const e=new BMap.Geolocation;e.getCurrentPosition((t=>{e.getStatus()==BMAP_STATUS_SUCCESS?(console.log("✅ 百度定位成功:",t),this.handleBaiduLocationSuccess(t)):(console.error("❌ 百度定位失败:",e.getStatus()),this.fallbackToHTML5Location())}),{enableHighAccuracy:!0,timeout:1e4,maximumAge:6e4}),console.log("✅ 百度定位已启动")}catch(t){console.error("❌ 百度定位初始化失败:",t),this.fallbackToHTML5Location()}},handleBaiduLocationSuccess(t){console.log("📍 百度定位详细信息:",t);const a=t.point,o=t.accuracy||100;this.currentLocation={longitude:a.lng.toFixed(6),latitude:a.lat.toFixed(6),accuracy:Math.round(o),timestamp:(new Date).toLocaleTimeString(),address:"正在解析地址...",source:"百度定位"},this.locationStatus=`百度定位成功 (精度: ${Math.round(o)}米)`,this.mapInstance.centerAndZoom(a,16),this.addBaiduLocationMarker(a,o),this.reverseGeocode(a.lng,a.lat),this.loadNearbyLockers(a.lng,a.lat),this.startBaiduLocationWatch(),e({title:`定位成功 (${Math.round(o)}米)`,icon:"success",duration:2e3}),console.log("✅ 百度定位处理完成")},addBaiduLocationMarker(t,e){var a;if(!this.mapInstance)return;this.mapInstance.clearOverlays();const o=new BMap.Marker(t),n=new BMap.Icon("data:image/svg+xml;base64,"+btoa('\n\t\t\t\t\t\t<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32">\n\t\t\t\t\t\t\t<circle cx="16" cy="16" r="12" fill="#007AFF" stroke="#FFFFFF" stroke-width="4"/>\n\t\t\t\t\t\t\t<circle cx="16" cy="16" r="4" fill="#FFFFFF"/>\n\t\t\t\t\t\t\t<circle cx="16" cy="16" r="14" fill="none" stroke="#007AFF" stroke-width="2" opacity="0.3"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t'),new BMap.Size(32,32),{anchor:new BMap.Size(16,16)});o.setIcon(n),this.mapInstance.addOverlay(o);const s=new BMap.Circle(t,e,{strokeColor:"#007AFF",strokeWeight:2,strokeOpacity:.6,fillColor:"#007AFF",fillOpacity:.2});this.mapInstance.addOverlay(s);const i=`\n\t\t\t\t\t<div style="padding: 15px; min-width: 250px;">\n\t\t\t\t\t\t<h4 style="margin: 0 0 10px 0; color: #007AFF;">📍 当前位置 (百度定位)</h4>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>经度:</strong> ${t.lng.toFixed(6)}</p>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>纬度:</strong> ${t.lat.toFixed(6)}</p>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>精度:</strong> ${Math.round(e)}米</p>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>更新时间:</strong> ${(new Date).toLocaleTimeString()}</p>\n\t\t\t\t\t\t<p style="margin: 5px 0; word-break: break-all;"><strong>地址:</strong> ${(null==(a=this.currentLocation)?void 0:a.address)||"解析中..."}</p>\n\t\t\t\t\t</div>\n\t\t\t\t`,c=new BMap.InfoWindow(i);o.addEventListener("click",(()=>{this.mapInstance.openInfoWindow(c,t)})),console.log("📍 百度定位标记已添加")},startBaiduLocationWatch(){console.log("👁️ 开始百度位置监听"),this.watchId&&clearInterval(this.watchId),this.watchId=setInterval((()=>{console.log("🔄 定时更新位置"),this.updateBaiduLocation()}),3e4),console.log("✅ 百度位置监听已启动")},updateBaiduLocation(){if(!this.mapInstance)return;const t=new BMap.Geolocation;t.getCurrentPosition((e=>{if(t.getStatus()==BMAP_STATUS_SUCCESS){console.log("🔄 位置更新成功:",e);const t=e.point,a=this.currentLocation;if(a){const e=this.calculateDistance(parseFloat(a.latitude),parseFloat(a.longitude),t.lat,t.lng);if(e<50)return void console.log("📍 位置变化较小，跳过更新:",e,"米");console.log("📍 位置显著变化:",e,"米")}this.handleBaiduLocationSuccess(e),console.log("📍 位置显著变化，重新搜索附近寄存点"),this.loadNearbyLockers(t.lng,t.lat)}}),{enableHighAccuracy:!0,timeout:5e3})},fallbackToHTML5Location(){console.log("🔄 使用HTML5定位作为备用方案"),this.loadingText="正在使用浏览器定位...",this.locationStatus="浏览器定位中",navigator.geolocation?navigator.geolocation.getCurrentPosition((t=>{console.log("✅ HTML5定位成功:",t),this.handleHTML5LocationSuccess(t)}),(t=>{console.error("❌ HTML5定位也失败:",t),this.useDefaultLocation()}),{enableHighAccuracy:!0,timeout:1e4,maximumAge:6e4}):this.useDefaultLocation()},handleHTML5LocationSuccess(t){const a=t.coords;if(this.currentLocation={longitude:a.longitude.toFixed(6),latitude:a.latitude.toFixed(6),accuracy:Math.round(a.accuracy),timestamp:(new Date).toLocaleTimeString(),address:"正在解析地址...",source:"HTML5定位"},this.locationStatus=`HTML5定位成功 (精度: ${Math.round(a.accuracy)}米)`,this.mapInstance){const t=new BMap.Point(a.longitude,a.latitude);this.mapInstance.centerAndZoom(t,16),this.addBaiduLocationMarker(t,a.accuracy)}this.reverseGeocode(a.longitude,a.latitude),this.loadNearbyLockers(a.longitude,a.latitude),e({title:`定位成功 (${Math.round(a.accuracy)}米)`,icon:"success",duration:2e3})},async initMap(){console.log("🗺️ 开始初始化百度地图"),this.mapStatus="加载地图API",this.loadingText="正在加载百度地图API...";try{await this.loadBaiduMapAPI(),this.createMapInstance(),setTimeout((()=>{this.startBaiduGeolocation()}),1e3)}catch(t){console.error("地图初始化失败:",t),this.handleError("地图初始化失败: "+t.message)}},loadBaiduMapAPI(){return new Promise(((t,e)=>{if(void 0!==window.BMap)return console.log("✅ 百度地图API已存在"),void t();console.log("📡 开始加载百度地图JavaScript API"),console.log("API密钥:",w),window.initBaiduMapCallback&&delete window.initBaiduMapCallback;const a=document.createElement("script");a.type="text/javascript",a.src=`https://api.map.baidu.com/api?v=3.0&ak=${w}&callback=initBaiduMapCallback`;const o=setTimeout((()=>{console.error("❌ 百度地图API加载超时"),this.handleMapError("百度地图API加载超时，请检查网络连接"),e(new Error("百度地图API加载超时"))}),15e3);window.initBaiduMapCallback=()=>{console.log("✅ 百度地图API加载完成"),clearTimeout(o),void 0!==window.BMap&&window.BMap.Map?(console.log("✅ 百度地图API验证成功"),this.mapStatus="API加载完成",delete window.initBaiduMapCallback,t()):(console.error("❌ 百度地图API加载不完整"),this.handleMapError("百度地图API加载不完整"),e(new Error("百度地图API加载不完整")))},a.onerror=t=>{console.error("❌ 百度地图API脚本加载失败:",t),clearTimeout(o),this.handleMapError("百度地图API脚本加载失败，请检查网络连接"),e(new Error("百度地图API脚本加载失败"))};try{document.head.appendChild(a),console.log("📡 百度地图API脚本已添加到页面")}catch(n){console.error("❌ 添加百度地图API脚本失败:",n),clearTimeout(o),this.handleMapError("添加百度地图API脚本失败"),e(n)}}))},createMapInstance(){console.log("🗺️ 创建百度地图实例"),this.mapStatus="创建地图";try{if(void 0===window.BMap)throw new Error("百度地图API未加载");this.$nextTick((()=>{try{const t=document.getElementById("baiduMapContainer");if(!t)return console.error("❌ 地图容器未找到，尝试延迟创建"),void setTimeout((()=>{this.createMapInstance()}),1e3);const e=t.getBoundingClientRect();if(console.log("地图容器信息:",{id:t.id,width:e.width,height:e.height,visible:e.width>0&&e.height>0,display:getComputedStyle(t).display,visibility:getComputedStyle(t).visibility}),0!==e.width&&0!==e.height||(console.warn("⚠️ 地图容器尺寸为0，设置默认尺寸"),t.style.width="100%",t.style.height="400px",t.style.minHeight="400px"),console.log("🗺️ 开始创建BMap实例"),this.mapInstance=new BMap.Map(t),!this.mapInstance)throw new Error("地图实例创建失败");console.log("✅ 地图实例创建成功");const a=new BMap.Point(113.6253,34.7466);this.mapInstance.centerAndZoom(a,15),this.mapInstance.enableScrollWheelZoom(!0),this.mapInstance.enableDragging(!0),this.mapInstance.enableDoubleClickZoom(!0),this.mapInstance.enableKeyboard(!0),this.mapInstance.enableInertialDragging(!0),this.mapInstance.enableContinuousZoom(!0),this.mapInstance.addControl(new BMap.NavigationControl),this.mapInstance.addControl(new BMap.ScaleControl),this.mapInstance.addEventListener("tilesloaded",(()=>{console.log("✅ 地图瓦片加载完成"),this.mapStatus="地图就绪",this.mapReady=!0,this.loadingText=""})),this.mapInstance.addEventListener("dragstart",(()=>{console.log("🖱️ 开始拖拽地图")})),this.mapInstance.addEventListener("dragend",(()=>{console.log("🖱️ 拖拽地图结束")})),this.mapInstance.addEventListener("zoomstart",(()=>{console.log("🔍 开始缩放地图")})),this.mapInstance.addEventListener("zoomend",(()=>{console.log("🔍 缩放地图结束");const t=this.mapInstance.getZoom();console.log("当前缩放级别:",t)})),this.mapInstance.addEventListener("click",(t=>{console.log("🖱️ 点击地图:",t.point)})),console.log("✅ 百度地图实例创建完成")}catch(t){console.error("❌ 地图实例创建失败:",t),this.handleError("地图实例创建失败: "+t.message)}}))}catch(t){console.error("❌ 创建地图实例失败:",t),this.handleError("创建地图实例失败: "+t.message)}},calculateDistance(t,e,a,o){const n=(a-t)*Math.PI/180,s=(o-e)*Math.PI/180,i=Math.sin(n/2)*Math.sin(n/2)+Math.cos(t*Math.PI/180)*Math.cos(a*Math.PI/180)*Math.sin(s/2)*Math.sin(s/2);return 6371e3*(2*Math.atan2(Math.sqrt(i),Math.sqrt(1-i)))},handleLocationError(t){let e="定位失败";if(t.code)switch(t.code){case t.PERMISSION_DENIED:e="用户拒绝了定位请求";break;case t.POSITION_UNAVAILABLE:e="位置信息不可用";break;case t.TIMEOUT:e="定位请求超时"}this.locationStatus=e,this.useDefaultLocation()},useDefaultLocation(){if(console.log("📍 使用默认位置（郑州）"),this.currentLocation={longitude:"113.625300",latitude:"34.746600",accuracy:1e3,timestamp:(new Date).toLocaleTimeString(),address:"河南省郑州市二七区",source:"默认位置"},this.currentCity="郑州",this.locationStatus="使用默认位置",this.loadingText="",this.mapInstance){const t=new BMap.Point(113.6253,34.7466);this.mapInstance.centerAndZoom(t,15),this.addBaiduLocationMarker(t,1e3)}this.loadNearbyLockers(113.6253,34.7466),e({title:"使用默认位置：郑州",icon:"none",duration:2e3}),console.log("✅ 默认位置设置完成")},reverseGeocode(t,o){if(console.log("🔍 开始解析地址:",{longitude:t,latitude:o}),!this.mapInstance)return void setTimeout((()=>{this.reverseGeocode(t,o)}),1e3);const n=new BMap.Geocoder,s=new BMap.Point(t,o);n.getLocation(s,(n=>{if(n){console.log("✅ 地址解析成功:",n);const s=n.addressComponents,i=n.address;this.currentLocation&&(this.currentLocation.address=i);const c=s.city||s.district||"未知城市",l=s.province||"";this.currentCity=c.replace("市",""),console.log("🏙️ 城市信息更新:",{province:l,city:c,district:s.district,street:s.street,fullAddress:i}),a("currentCity",{name:this.currentCity,province:l,fullName:c,coordinates:{longitude:t,latitude:o},timestamp:(new Date).getTime()}),e({title:`当前城市: ${this.currentCity}`,icon:"none",duration:2e3})}else console.warn("⚠️ 地址解析失败"),this.currentLocation.address="地址解析失败"}))},addCurrentLocationMarker(){if(!this.mapInstance||!this.currentLocation)return;const t=parseFloat(this.currentLocation.longitude),e=parseFloat(this.currentLocation.latitude),a=new BMap.Point(t,e);this.mapInstance.clearOverlays();const o=new BMap.Marker(a),n=new BMap.Icon("data:image/svg+xml;base64,"+btoa('\n\t\t\t\t\t\t<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24">\n\t\t\t\t\t\t\t<circle cx="12" cy="12" r="8" fill="#007AFF" stroke="#FFFFFF" stroke-width="3"/>\n\t\t\t\t\t\t\t<circle cx="12" cy="12" r="3" fill="#FFFFFF"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t'),new BMap.Size(24,24),{anchor:new BMap.Size(12,12)});if(o.setIcon(n),this.mapInstance.addOverlay(o),this.currentLocation.accuracy){const t=new BMap.Circle(a,this.currentLocation.accuracy,{strokeColor:"#007AFF",strokeWeight:2,strokeOpacity:.5,fillColor:"#007AFF",fillOpacity:.1});this.mapInstance.addOverlay(t)}const s=`\n\t\t\t\t\t<div style="padding: 10px; min-width: 200px;">\n\t\t\t\t\t\t<h4 style="margin: 0 0 10px 0; color: #007AFF;">📍 当前位置</h4>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>经度:</strong> ${t}</p>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>纬度:</strong> ${e}</p>\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>精度:</strong> ${this.currentLocation.accuracy}米</p>\n\t\t\t\t\t\t${this.currentLocation.altitude?`<p style="margin: 5px 0;"><strong>海拔:</strong> ${this.currentLocation.altitude}米</p>`:""}\n\t\t\t\t\t\t${this.currentLocation.speed?`<p style="margin: 5px 0;"><strong>速度:</strong> ${this.currentLocation.speed}km/h</p>`:""}\n\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>更新时间:</strong> ${this.currentLocation.timestamp}</p>\n\t\t\t\t\t\t<p style="margin: 5px 0; word-break: break-all;"><strong>地址:</strong> ${this.currentLocation.address}</p>\n\t\t\t\t\t</div>\n\t\t\t\t`,i=new BMap.InfoWindow(s);o.addEventListener("click",(()=>{this.mapInstance.openInfoWindow(i,a)})),console.log("📍 位置标记已更新")},updateLocationMarker(t,e){this.mapInstance&&(this.addCurrentLocationMarker(),console.log("📍 位置标记已更新到新位置:",{longitude:t,latitude:e}))},loadNearbyLockers(t,a){if(!t||!a)return void console.warn("⚠️ 缺少位置信息，无法搜索附近寄存点");console.log("🔍 开始搜索附近寄存点"),console.log("搜索位置:",{longitude:t,latitude:a}),this.loadingText="正在搜索附近寄存点...";const o=`http://localhost:8000/api/nearby/my-nearby?${new URLSearchParams({longitude:t.toString(),latitude:a.toString(),radius:"5",limit:"20"}).toString()}`;console.log("📡 请求URL:",o),n({url:o,method:"GET",header:{"Content-Type":"application/json"},timeout:1e4,success:t=>{console.log("=== 后端附近寄存点接口响应 ==="),console.log("HTTP状态码:",t.statusCode),console.log("响应数据:",t.data),200===t.statusCode&&t.data?this.handleNearbyLockersSuccess(t.data):401===t.statusCode?(console.error("❌ API需要认证，后端服务可能需要重启"),this.handleNearbyLockersError("正在连接服务器，请稍后重试..."),e({title:"正在连接服务器...",icon:"loading",duration:2e3})):(console.error("❌ 接口返回错误:",t.statusCode),this.handleNearbyLockersError("接口返回错误: "+t.statusCode))},fail:t=>{console.error("❌ 附近寄存点接口调用失败:",t),this.handleNearbyLockersError("网络请求失败: "+(t.errMsg||"未知错误")),e({title:"网络连接失败",icon:"none",duration:2e3})}})},handleNearbyLockersSuccess(t){console.log("✅ 附近寄存点接口调用成功"),console.log("原始响应数据:",t);const a=t.nearby_points||[],o=t.total_count||0,n=t.search_radius||5;t.user_location,console.log("📍 附近寄存点数据:",{count:a.length,totalCount:o,searchRadius:n}),a&&a.length>0?(this.nearbyLockers=this.processNearbyLockersData(a),this.addLockersToMap(this.nearbyLockers),this.selectedLocker=this.nearbyLockers[0],console.log("✅ 寄存点数据处理完成:",this.nearbyLockers.length,"个"),e({title:`找到${this.nearbyLockers.length}个寄存点`,icon:"success",duration:2e3})):(console.log("⚠️ 附近没有找到寄存点"),this.nearbyLockers=[],this.selectedLocker=null,e({title:`附近${n}km内暂无寄存点`,icon:"none",duration:2e3})),this.loadingText=""},handleNearbyLockersError(t){var a,o,n,s;console.error("❌ 附近寄存点加载失败:",t),console.log("🔄 使用模拟数据作为备用"),this.nearbyLockers=[{id:"mock_1",name:"模拟寄存点1",large:3,medium:5,small:8,address:"模拟地址1",distance:"0.5km",status:"available",longitude:parseFloat((null==(a=this.currentLocation)?void 0:a.longitude)||113.6253)+.005,latitude:parseFloat((null==(o=this.currentLocation)?void 0:o.latitude)||34.7466)+.005},{id:"mock_2",name:"模拟寄存点2",large:2,medium:4,small:6,address:"模拟地址2",distance:"1.2km",status:"available",longitude:parseFloat((null==(n=this.currentLocation)?void 0:n.longitude)||113.6253)-.008,latitude:parseFloat((null==(s=this.currentLocation)?void 0:s.latitude)||34.7466)+.003}],this.selectedLocker=this.nearbyLockers[0],this.addLockersToMap(this.nearbyLockers),this.loadingText="",e({title:"使用模拟数据",icon:"none",duration:2e3})},processNearbyLockersData(t){return console.log("🔄 处理寄存点数据，数量:",t.length),t.map(((t,e)=>(console.log(`处理寄存点 ${e+1}:`,t),{id:t.id||t.point_id||`point_${e+1}`,name:t.name||t.point_name||`寄存点${e+1}`,large:parseInt(t.large_count||t.large||0),medium:parseInt(t.medium_count||t.medium||0),small:parseInt(t.small_count||t.small||0),address:t.address||t.location||"地址信息待完善",distance:this.formatDistance(t.distance),status:t.status||"available",longitude:parseFloat(t.longitude||0),latitude:parseFloat(t.latitude||0),phone:t.phone||t.mobile||"",openTime:t.open_time||t.business_hours||"24小时",rating:parseFloat(t.rating||t.score||0),rawData:t})))},formatDistance:t=>"number"==typeof t?t<1?Math.round(1e3*t)+"m":t.toFixed(1)+"km":"string"==typeof t?t:"距离未知",addLockersToMap(t){this.mapInstance&&t&&0!==t.length&&(console.log("📍 在地图上添加寄存点标记:",t.length,"个"),t.forEach(((t,e)=>{if(!t.longitude||!t.latitude)return void console.warn("⚠️ 寄存点缺少坐标信息:",t);const a=new BMap.Point(t.longitude,t.latitude),o=new BMap.Marker(a),n=new BMap.Icon("data:image/svg+xml;base64,"+btoa('\n\t\t\t\t\t\t\t<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28">\n\t\t\t\t\t\t\t\t<rect x="2" y="2" width="24" height="24" fill="#FF6B35" stroke="#FFFFFF" stroke-width="2" rx="4"/>\n\t\t\t\t\t\t\t\t<text x="14" y="18" text-anchor="middle" fill="white" font-size="12" font-weight="bold">柜</text>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t'),new BMap.Size(28,28),{anchor:new BMap.Size(14,14)});o.setIcon(n),this.mapInstance.addOverlay(o);const s=`\n\t\t\t\t\t\t<div style="padding: 15px; min-width: 250px;">\n\t\t\t\t\t\t\t<h4 style="margin: 0 0 10px 0; color: #FF6B35;">🏪 ${t.name}</h4>\n\t\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>地址:</strong> ${t.address}</p>\n\t\t\t\t\t\t\t<p style="margin: 5px 0;"><strong>距离:</strong> ${t.distance}</p>\n\t\t\t\t\t\t\t<div style="margin: 10px 0;">\n\t\t\t\t\t\t\t\t<strong>柜子数量:</strong><br>\n\t\t\t\t\t\t\t\t大柜: ${t.large}个 | 中柜: ${t.medium}个 | 小柜: ${t.small}个\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p style="margin: 5px 0; color: ${"available"===t.status?"#28a745":"#dc3545"};">\n\t\t\t\t\t\t\t\t<strong>状态:</strong> ${"available"===t.status?"可用":"不可用"}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`,i=new BMap.InfoWindow(s);o.addEventListener("click",(()=>{this.mapInstance.openInfoWindow(i,a),this.selectedLocker=t,console.log("选中寄存点:",t.name)}))})),console.log("✅ 寄存点标记添加完成"))},getCurrentLocation(){console.log("🏙️ 回到城市按钮点击"),this.locationStatus="正在回到选择的城市...",this.loadingText="正在回到选择的城市...",s({title:"正在回到城市..."});const o=t("selectedCity");console.log("🔍 存储中的选择城市:",o),console.log("🔍 城市名称:",null==o?void 0:o.name),console.log("🔍 城市坐标:",null==o?void 0:o.coordinates),o&&o.coordinates?(console.log("📍 回到选择的城市:",o.name),console.log("📍 城市坐标:",o.coordinates),this.currentCity=o.name,setTimeout((()=>{i(),this.setCityLocation(o),e({title:`已回到${o.name}`,icon:"success",duration:2e3})}),1e3)):(console.log("📍 未找到选择的城市，使用默认城市"),setTimeout((()=>{i();const t={name:"郑州",coordinates:{longitude:113.6253,latitude:34.7466}};a("selectedCity",t),this.currentCity=t.name,this.setCityLocation(t),e({title:"已回到默认城市：郑州",icon:"none",duration:2e3})}),1e3))},manualHTML5Location(){if(console.log("🧭 手动HTML5定位"),!navigator.geolocation)return i(),void c({title:"定位失败",content:"浏览器不支持定位功能",showCancel:!1});navigator.geolocation.getCurrentPosition((t=>{i(),console.log("✅ HTML5手动定位成功:",t),this.handleHTML5LocationSuccess(t)}),(t=>{i(),console.error("❌ HTML5手动定位失败:",t);let e="定位失败";switch(t.code){case t.PERMISSION_DENIED:e="定位权限被拒绝，请在浏览器设置中允许位置访问";break;case t.POSITION_UNAVAILABLE:e="位置信息不可用，请检查GPS或网络连接";break;case t.TIMEOUT:e="定位超时，请重试"}c({title:"定位失败",content:e,showCancel:!1})}),{enableHighAccuracy:!0,timeout:15e3,maximumAge:0})},refreshMap(){console.log("🔄 刷新地图和附近寄存点"),this.loadingText="正在刷新...",s({title:"正在刷新..."});const a=t("selectedCity");if(a&&a.coordinates)console.log("🔄 刷新到选择的城市:",a.name),this.currentCity=a.name,setTimeout((()=>{i(),this.setCityLocation(a),e({title:`已刷新${a.name}的寄存点`,icon:"success",duration:2e3})}),1e3);else if(this.currentLocation){const t=parseFloat(this.currentLocation.longitude),a=parseFloat(this.currentLocation.latitude);console.log("🔄 基于当前位置刷新附近寄存点"),setTimeout((()=>{i(),this.loadNearbyLockers(t,a),e({title:"已刷新附近寄存点",icon:"success",duration:2e3})}),1e3)}else console.log("🔄 重新初始化地图和定位"),setTimeout((()=>{i(),this.mapReady=!1,this.startInitialization(),e({title:"正在重新初始化地图",icon:"loading",duration:2e3})}),1e3)},refreshNearbyLockers(){if(!this.currentLocation)return void e({title:"请先获取位置信息",icon:"none",duration:2e3});const t=parseFloat(this.currentLocation.longitude),a=parseFloat(this.currentLocation.latitude);console.log("🔄 手动刷新附近寄存点"),this.loadNearbyLockers(t,a)},handleError(t){console.error("❌ 错误:",t),this.mapError=!0,this.mapErrorMessage=t,this.mapStatus="加载失败",this.loadingText=""},handleMapError(t){console.error("❌ 地图错误:",t),this.mapError=!0,this.mapErrorMessage=t,this.mapStatus="API加载失败",this.loadingText="",e({title:"地图加载失败",icon:"none",duration:3e3})},retryLoadMap(){console.log("🔄 重试加载地图"),this.mapError=!1,this.mapErrorMessage="",this.startInitialization()},openSearch(){console.log("🔍 打开搜索页面"),o({url:"/pages/search/search"})},selectLocker(t){console.log("选择寄存点:",t),c({title:"确认选择",content:`确定选择 ${t.name} 吗？`,success:t=>{t.confirm&&e({title:"跳转到寄存点详情",icon:"success",duration:1500})}})}}},[["render",function(t,e,a,o,n,s){const i=f,c=d,M=I;return u(),l(c,{class:"page"},{default:r((()=>[h(c,{class:"status-bar"},{default:r((()=>[h(i,{class:"status-text"},{default:r((()=>[p("城市定位状态: "+g(n.locationStatus),1)])),_:1}),h(i,{class:"api-key-text"},{default:r((()=>[p("百度地图: "+g(n.mapStatus),1)])),_:1})])),_:1}),h(c,{class:"search-section"},{default:r((()=>[h(c,{class:"location-info",onClick:s.selectCity},{default:r((()=>[h(i,{class:"location-icon"},{default:r((()=>[p("📍")])),_:1}),h(i,{class:"current-city"},{default:r((()=>[p(g(n.currentCity),1)])),_:1}),h(i,{class:"dropdown-icon"},{default:r((()=>[p("▼")])),_:1})])),_:1},8,["onClick"]),h(c,{class:"search-box",onClick:s.openSearch},{default:r((()=>[h(i,{class:"search-icon"},{default:r((()=>[p("🔍")])),_:1}),h(i,{class:"search-placeholder"},{default:r((()=>[p("搜索火车站/地铁站/景点")])),_:1})])),_:1},8,["onClick"])])),_:1}),h(c,{class:"map-container"},{default:r((()=>[n.mapReady||n.mapError?m("",!0):(u(),l(c,{key:0,class:"map-placeholder"},{default:r((()=>[h(c,{class:"placeholder-content"},{default:r((()=>[h(i,{class:"placeholder-icon"},{default:r((()=>[p("🗺️")])),_:1}),h(i,{class:"placeholder-text"},{default:r((()=>[p(g(n.loadingText),1)])),_:1}),h(i,{class:"placeholder-status"},{default:r((()=>[p("状态: "+g(n.mapStatus),1)])),_:1})])),_:1})])),_:1})),y(h(c,{id:"baiduMapContainer",class:"baidu-map-container"},null,512),[[L,!n.mapError]]),h(c,{class:"map-controls"},{default:r((()=>[h(c,{class:"control-btn location-btn",onClick:s.getCurrentLocation},{default:r((()=>[h(i,{class:"btn-icon"},{default:r((()=>[p("🏙️")])),_:1}),h(i,{class:"btn-text"},{default:r((()=>[p("回到城市")])),_:1})])),_:1},8,["onClick"]),h(c,{class:"control-btn refresh-btn",onClick:s.refreshMap},{default:r((()=>[h(i,{class:"btn-icon"},{default:r((()=>[p("🔄")])),_:1}),h(i,{class:"btn-text"},{default:r((()=>[p("刷新")])),_:1})])),_:1},8,["onClick"]),h(c,{class:"control-btn lockers-btn",onClick:s.refreshNearbyLockers},{default:r((()=>[h(i,{class:"btn-icon"},{default:r((()=>[p("🏪")])),_:1}),h(i,{class:"btn-text"},{default:r((()=>[p("寄存点")])),_:1})])),_:1},8,["onClick"])])),_:1}),n.mapError?(u(),l(c,{key:1,class:"map-error"},{default:r((()=>[h(i,{class:"error-title"},{default:r((()=>[p("地图加载失败")])),_:1}),h(i,{class:"error-message"},{default:r((()=>[p(g(n.mapErrorMessage),1)])),_:1}),h(c,{class:"error-actions"},{default:r((()=>[h(M,{class:"retry-btn",onClick:s.retryLoadMap},{default:r((()=>[p("重试")])),_:1},8,["onClick"])])),_:1})])),_:1})):m("",!0),n.currentLocation?(u(),l(c,{key:2,class:"location-info-panel"},{default:r((()=>[h(i,{class:"location-title"},{default:r((()=>[p("🏙️ 当前城市位置 ("+g(n.currentLocation.source)+")",1)])),_:1}),h(i,{class:"location-detail"},{default:r((()=>[p("🌐 经度: "+g(n.currentLocation.longitude),1)])),_:1}),h(i,{class:"location-detail"},{default:r((()=>[p("🌐 纬度: "+g(n.currentLocation.latitude),1)])),_:1}),h(i,{class:"location-detail"},{default:r((()=>[p("🎯 精度: "+g(n.currentLocation.accuracy)+"米",1)])),_:1}),n.currentLocation.altitude?(u(),l(i,{key:0,class:"location-detail"},{default:r((()=>[p("⛰️ 海拔: "+g(n.currentLocation.altitude)+"米",1)])),_:1})):m("",!0),n.currentLocation.speed?(u(),l(i,{key:1,class:"location-detail"},{default:r((()=>[p("🚗 速度: "+g(n.currentLocation.speed)+"km/h",1)])),_:1})):m("",!0),h(i,{class:"location-detail"},{default:r((()=>[p("🕐 更新: "+g(n.currentLocation.timestamp),1)])),_:1}),h(i,{class:"location-detail address"},{default:r((()=>[p("📍 "+g(n.currentLocation.address),1)])),_:1})])),_:1})):m("",!0)])),_:1}),n.currentLocation?(u(),l(c,{key:0,class:"locker-panel"},{default:r((()=>[h(c,{class:"panel-header"},{default:r((()=>[h(i,{class:"panel-title"},{default:r((()=>[p("🏪 附近寄存点")])),_:1}),n.nearbyLockers.length>0?(u(),l(i,{key:0,class:"panel-count"},{default:r((()=>[p("找到 "+g(n.nearbyLockers.length)+" 个寄存点",1)])),_:1})):(u(),l(i,{key:1,class:"panel-count"},{default:r((()=>[p("附近暂无寄存点")])),_:1})),h(i,{class:"refresh-btn-small",onClick:s.refreshNearbyLockers},{default:r((()=>[p("🔄")])),_:1},8,["onClick"])])),_:1}),n.selectedLocker?(u(),l(c,{key:0,class:"selected-locker"},{default:r((()=>[h(c,{class:"locker-info"},{default:r((()=>[h(i,{class:"locker-name"},{default:r((()=>[p(g(n.selectedLocker.name),1)])),_:1}),h(i,{class:"locker-address"},{default:r((()=>[p("📍 "+g(n.selectedLocker.address),1)])),_:1}),h(i,{class:"locker-distance"},{default:r((()=>[p("📏 距离: "+g(n.selectedLocker.distance),1)])),_:1}),h(i,{class:k(["locker-status",n.selectedLocker.status])},{default:r((()=>[p(" 🔘 状态: "+g("available"===n.selectedLocker.status?"可用":"不可用"),1)])),_:1},8,["class"])])),_:1}),h(c,{class:"locker-capacity"},{default:r((()=>[h(c,{class:"capacity-item"},{default:r((()=>[h(i,{class:"capacity-label"},{default:r((()=>[p("大柜")])),_:1}),h(i,{class:k(["capacity-value",{zero:0===n.selectedLocker.large}])},{default:r((()=>[p(g(n.selectedLocker.large),1)])),_:1},8,["class"])])),_:1}),h(c,{class:"capacity-item"},{default:r((()=>[h(i,{class:"capacity-label"},{default:r((()=>[p("中柜")])),_:1}),h(i,{class:k(["capacity-value",{zero:0===n.selectedLocker.medium}])},{default:r((()=>[p(g(n.selectedLocker.medium),1)])),_:1},8,["class"])])),_:1}),h(c,{class:"capacity-item"},{default:r((()=>[h(i,{class:"capacity-label"},{default:r((()=>[p("小柜")])),_:1}),h(i,{class:k(["capacity-value",{zero:0===n.selectedLocker.small}])},{default:r((()=>[p(g(n.selectedLocker.small),1)])),_:1},8,["class"])])),_:1})])),_:1}),h(c,{class:"locker-actions"},{default:r((()=>[h(M,{class:"action-btn primary",onClick:e[0]||(e[0]=t=>s.selectLocker(n.selectedLocker)),disabled:"available"!==n.selectedLocker.status},{default:r((()=>[p(g("available"===n.selectedLocker.status?"选择此寄存点":"暂不可用"),1)])),_:1},8,["disabled"])])),_:1})])),_:1})):(u(),l(c,{key:1,class:"no-lockers"},{default:r((()=>[h(c,{class:"no-lockers-content"},{default:r((()=>[h(i,{class:"no-lockers-icon"},{default:r((()=>[p("📍")])),_:1}),h(i,{class:"no-lockers-title"},{default:r((()=>[p("附近暂无寄存点")])),_:1}),h(i,{class:"no-lockers-desc"},{default:r((()=>[p("在当前位置5公里范围内未找到可用的寄存点")])),_:1}),h(c,{class:"no-lockers-actions"},{default:r((()=>[h(M,{class:"action-btn secondary",onClick:s.refreshNearbyLockers},{default:r((()=>[p(" 🔄 重新搜索 ")])),_:1},8,["onClick"]),h(M,{class:"action-btn primary",onClick:s.openSearch},{default:r((()=>[p(" 🔍 搜索其他地点 ")])),_:1},8,["onClick"])])),_:1})])),_:1})])),_:1}))])),_:1})):m("",!0)])),_:1})}],["__scopeId","data-v-c5cbaf94"]]);export{b as default};
